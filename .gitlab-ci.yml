stages:
  - init
  - trigger

default:
  interruptible: true

workflow:
  rules:
    - if: $CI_EXTERNAL_PULL_REQUEST_IID

trigger_internal_ci:
  stage: init
  image: node
  tags: 
    - docker-prod
  variables:
    DOWNSTREAM_PROJECT_ID: 7121
  script:
    # Check if feature branch exists in downstream project. Otherwise use master.
    - export TRIGGER_BRANCH=${CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME}

    # - |
    #   curl -fksSL --header \
    #   "PRIVATE-TOKEN:${SVC_HLS_RENDER_API}" \
    #   "${CI_SERVER_URL}/api/v4/projects/${DOWNSTREAM_PROJECT_ID}/repository/branches/${CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME}" \
    #     || export TRIGGER_BRANCH='master'
    # - echo "Going to trigger pipeline on ${TRIGGER_BRANCH} branch in downstream project (id ${DOWNSTREAM_PROJECT_ID})"
    # Trigger downstream project and wait for it.
    - |
      set -e
      echo $CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME
      #Creating a new branch
        curl --request POST --header \
        "PRIVATE-TOKEN: $SVC_HLS_RENDER_API" \
        "${CI_SERVER_URL}/api/v4/projects/$DOWNSTREAM_PROJECT_ID/repository/branches?branch=$CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME&ref=master"

      #Create a merge request
        curl --request POST --header \
        "PRIVATE-TOKEN: $SVC_HLS_RENDER_API" \
        "$CI_SERVER_URL/api/v4/projects/$DOWNSTREAM_PROJECT_ID/merge_requests?source_branch=$CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME&target_branch=master&title=MRtitled_$CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME" || echo "Could not create"

      scripts/generate-config.sh
  artifacts:
     paths:
      - generated-config.yml

bridge_for_bridge:
  stage: trigger
  trigger:
    include:
      - artifact: generated-config.yml
        job: trigger_internal_ci
    strategy: depend


